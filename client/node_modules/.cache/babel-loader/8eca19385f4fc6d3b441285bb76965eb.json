{"ast":null,"code":"import * as APIUtil from '../util/session';\nimport jwt_decode from 'jwt-decode';\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION ERRORS\";\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\nexport const receiveUserSignIn = () => ({\n  type: RECEIVE_USER_SIGN_IN\n});\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT\n});\nexport const signup = user => dispatch => APIUtil.signup(user).then(() => dispatch(login(user)), err => dispatch(receiveErrors(err.response)));\nexport const login = user => dispatch => APIUtil.login(user).then(res => {\n  const {\n    token\n  } = res.data;\n  console.log(token);\n  localStorage.setItem('jwtToken', token);\n  APIUtil.setAuthToken(token);\n  const decoded = jwt_decode(token);\n  dispatch(receiveCurrentUser(decoded));\n}).catch(err => {\n  dispatch(receiveErrors(err.response));\n});\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  APIUtil.setAuthToken(false);\n  dispatch(logoutUser());\n};","map":{"version":3,"sources":["/home/eamrhein/jpegup/client/src/actions/session.js"],"names":["APIUtil","jwt_decode","RECEIVE_USER_LOGOUT","RECEIVE_SESSION_ERRORS","RECEIVE_CURRENT_USER","RECEIVE_USER_SIGN_IN","receiveCurrentUser","currentUser","type","receiveUserSignIn","receiveErrors","errors","logoutUser","signup","user","dispatch","then","login","err","response","res","token","data","console","log","localStorage","setItem","setAuthToken","decoded","catch","logout","removeItem"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,kBAAkB,GAAGC,WAAW,KAAK;AAChDC,EAAAA,IAAI,EAAEJ,oBAD0C;AAEhDG,EAAAA;AAFgD,CAAL,CAAtC;AAKP,OAAO,MAAME,iBAAiB,GAAG,OAAO;AACtCD,EAAAA,IAAI,EAAEH;AADgC,CAAP,CAA1B;AAIP,OAAO,MAAMK,aAAa,GAAGC,MAAM,KAAK;AACtCH,EAAAA,IAAI,EAAEL,sBADgC;AAEtCQ,EAAAA;AAFsC,CAAL,CAA5B;AAKP,OAAO,MAAMC,UAAU,GAAG,OAAO;AAC/BJ,EAAAA,IAAI,EAAEN;AADyB,CAAP,CAAnB;AAKP,OAAO,MAAMW,MAAM,GAAGC,IAAI,IAAIC,QAAQ,IACpCf,OAAO,CAACa,MAAR,CAAeC,IAAf,EAAqBE,IAArB,CAA0B,MACxBD,QAAQ,CAACE,KAAK,CAACH,IAAD,CAAN,CADV,EAEGI,GAAG,IACJH,QAAQ,CAACL,aAAa,CAACQ,GAAG,CAACC,QAAL,CAAd,CAHV,CADK;AAQP,OAAO,MAAMF,KAAK,GAAGH,IAAI,IAAIC,QAAQ,IACnCf,OAAO,CAACiB,KAAR,CAAcH,IAAd,EAAoBE,IAApB,CAAyBI,GAAG,IAAI;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,GAAG,CAACE,IAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCL,KAAjC;AACArB,EAAAA,OAAO,CAAC2B,YAAR,CAAqBN,KAArB;AACA,QAAMO,OAAO,GAAG3B,UAAU,CAACoB,KAAD,CAA1B;AACAN,EAAAA,QAAQ,CAACT,kBAAkB,CAACsB,OAAD,CAAnB,CAAR;AACD,CAPD,EAQGC,KARH,CAQSX,GAAG,IAAI;AAEZH,EAAAA,QAAQ,CAACL,aAAa,CAACQ,GAAG,CAACC,QAAL,CAAd,CAAR;AACD,CAXH,CADK;AAgBP,OAAO,MAAMW,MAAM,GAAG,MAAMf,QAAQ,IAAI;AACtCU,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA/B,EAAAA,OAAO,CAAC2B,YAAR,CAAqB,KAArB;AACAZ,EAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,CAJM","sourcesContent":["import * as APIUtil from '../util/session';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION ERRORS\";\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\"\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\"\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\n\nexport const receiveUserSignIn = () => ({\n  type: RECEIVE_USER_SIGN_IN\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT\n});\n\n\nexport const signup = user => dispatch => (\n  APIUtil.signup(user).then(() => (\n    dispatch(login(user))\n  ), err => (\n    dispatch(receiveErrors(err.response))\n  ))\n);\n\nexport const login = user => dispatch => (\n  APIUtil.login(user).then(res => {\n    const { token } = res.data;\n    console.log(token)\n    localStorage.setItem('jwtToken', token);\n    APIUtil.setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(receiveCurrentUser(decoded))\n  })\n    .catch(err => {\n      \n      dispatch(receiveErrors(err.response));\n    })\n)\n\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken')\n  APIUtil.setAuthToken(false)\n  dispatch(logoutUser())\n};"]},"metadata":{},"sourceType":"module"}