{"version":3,"sources":["styled/theme.js","actions/session.js","components/navbar.js","components/recent.js","components/user.js","components/login.js","components/signup.js","util/route.js","App.js","serviceWorker.js","index.js","reducers/session.js","reducers/root.js","store/store.js"],"names":["theme","colors","navbar","background","font","primary","secondary","Main","styled","div","Form","form","Input","input","Button","button","props","Title","h1","Nav","h2","p","color","nav","NavItems","ul","logout","dispatch","localStorage","removeItem","type","Logo","span","Navbar","session","useSelector","state","useDispatch","className","to","isAuthenticated","id","href","onClick","RecentImgs","UserStory","username","AuthStyle","Login","onSubmit","e","preventDefault","placeholder","SignUp","AuthRoute","withRouter","connect","loggedIn","Component","component","path","exact","render","AppStyle","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","initial","RootReducer","combineReducers","action","currentUser","isSignedIn","configureStore","preloadedState","middleware","thunk","createStore","rootReducer","applyMiddleware","jwtToken","decodedUser","jwt_decode","currentTime","Date","now","exp","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.90b99210.chunk.js","sourcesContent":["import styled from 'styled-components';\nconst theme = {\n\tcolors: {\n\t\tnavbar: '#FFFFFF',\n\t\tbackground: '#EFEFEF',\n\t\tfont: '#545454',\n\t\tprimary: '#FF3B3F',\n\t\tsecondary: '#CAEBF2',\n\t},\n};\nconst Main = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin: 1vmax;\n\tmargin-top: 5vmax;\n\tpadding: 1vmax;\n\tbackground-color: blue;\n\twidth: 80vw;\n\tmin-height: 80vh;\n\tborder-radius: 5px;\n\tbackground-color: #FFF;\n`;\nconst Form = styled.form`\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Input = styled.input`\n    margin-bottom: 1rem;\n    width: 300px;\n    height: 35px;\n    border: 1px solid #ccc;\n    background-color: #fff;\n    &::-webkit-input-placeholder{\n        padding-left: 1rem;\n    }\n    &::-moz-placeholder{\n        padding-left: 1rem;\n    }\n    &::-ms-input-placeholder{\n        padding-left: 1rem;\n    }\n`;\n\nconst Button = styled.button`\n    width: 300px;\n    height: 35px;\n    border: none;\n    text-decoration: none;\n    font-family: sans-serif;\n    font-size: 1rem;\n    cursor: pointer;\n    text-align: center;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: ${props => props.theme.colors.font};\n    color: #fff;\n    border-radius: 3px;\n    transition: background 250ms ease-in-out, \n                transform 150ms ease;\n    &:hover{\n        background-color:${props => props.theme.colors.primary};\n    }\n`;\n\n// Text\n\nconst Title = styled.h1`\n  font-family: 'Libre Franklin', sans-serif;\n  font-weight: 600;\n  color: ${props => props.theme.colors.font};\n  font-size: calc(18pt + 0.5rem);\n`;\n\nconst Title2 = styled.h2`\n  font-family: 'Overpass', sans-serif;\n  font-weight: 300;\n  color: ${props => props.theme.colors.font};\n  font-size: calc(14pt + 1rem);\n`;\n\nconst Text = styled.p`\n  font-family: 'Meera Inimai', sans-serif;\n  color: ${props => props.theme.color.colors.font || '#4d4d4d'};\n`;\n\nconst Nav = styled.nav`    \n    background-color: ${(props) => props.theme.colors.navbar};\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.15);\n`;\nconst NavItems = styled.ul`\n    display: flex;\n    margin: 0.5rem;\n    min-width: 100vw;\n    max-width: 100vw;\n    align-items: center;\n    li {\n        margin-right: 1.5rem;\n        list-style: none;\n    }\n    @media(max-width: 600px) {\n        padding-inline-start: 0;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        .logo, li {\n            margin: 0 !important;\n        }\n    }\n    .logo {\n        margin-right: auto;\n    }\n  \n`;\nexport {Form, Button, Input, Nav, NavItems, Title, Title2, Text, Main, theme};","import * as APIUtil from '../util/session';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION ERRORS\";\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\"\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\"\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\n\nexport const receiveUserSignIn = () => ({\n  type: RECEIVE_USER_SIGN_IN\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT\n});\n\n\nexport const signup = user => dispatch => (\n  APIUtil.signup(user).then(() => (\n    dispatch(login(user))\n  ), err => (\n    dispatch(receiveErrors(err.response))\n  ))\n);\n\nexport const login = user => dispatch => (\n  APIUtil.login(user).then(res => {\n    const { token } = res;\n    localStorage.setItem('jwtToken', token);\n    const decoded = jwt_decode(token);\n    dispatch(receiveCurrentUser(decoded))\n  })\n    .catch(err => {\n      dispatch(receiveErrors(err.response));\n    })\n)\n\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken')\n  dispatch(logoutUser())\n};","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Nav, NavItems, Title} from '../styled/theme';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {logout} from '../actions/session';\nimport styled from 'styled-components';\n\nconst Logo = styled.span`\n\tfont-weight: bolder;\n\tcolor: ${props => props.theme.colors.primary};\n`;\nconst Navbar = () => {\n\tconst session = useSelector( \n\t\tstate => state.session,\n\t);\n\tconst dispatch = useDispatch();\n\treturn(\n\t\t<Nav>\n\t\t\t<NavItems>\n\t\t\t\t<li className=\"logo\">\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<h1>Travel<Logo>Story</Logo></h1>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t{session.isAuthenticated ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to={'/user/' + session.id} >\n\t\t\t\t\t\t\tMy Stories\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li><a href=\"\" onClick={() => dispatch(logout())}>Logout</a></li>\n\t\t\t\t\t</>\n\t\t\t\t\t:\n\t\t\t\t\t<>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/signup\">\n\t\t\t\t\t\t\t\tSignup\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</>\n\t\t\t\t}\t\t\n\t\t\t</NavItems>\n\t\t</Nav>);\n};\n\nexport default Navbar;","import React from 'react';\nimport { Title, Main } from '../styled/theme';\n\n\nconst RecentImgs = () => {\n\treturn(\n\t\t<Main>\n\t\t\t<Title>Recent Trips</Title>\n\t\t</Main> \n\t);\n};\n\nexport default RecentImgs;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport { Title, Main } from '../styled/theme';\nconst UserStory = () => {\n\tconst session = useSelector( \n\t\tstate => state.session,\n\t);\n\treturn(\n\t\t<Main>\n\t\t\t<Title>{session.username}'s Trips</Title>\n\t\t</Main>) ;\n};\n\nexport default UserStory;","import React from 'react';\nimport styled from 'styled-components';\nimport { Form, Input, Button } from '../styled/theme';\nconst AuthStyle = styled.div`\n    margin-top: 10vh;\n    margin-bottom: 10vh;\n    margin-left: 20vw;\n    margin-right: 20vw;\n`;\nconst Login = () => {\n\treturn(\n\t\t<AuthStyle>\n\t\t\t<h3>Login</h3>\n\t\t\t<Form onSubmit={e => e.preventDefault()}>\n\t\t\t\t<Input type=\"email\" placeholder=\"Email\" />\n\t\t\t\t<Input type=\"password\" placeholder=\"Password\" />\n\t\t\t\t<Button type=\"submit\">Login</Button>\n\t\t\t</Form>\n\t\t</AuthStyle> \n\t);\n};\n\nexport default Login;","import React from 'react';\nimport styled from 'styled-components';\nimport { Form, Input, Button } from '../styled/theme';\n\nconst AuthStyle = styled.div`\n    margin-top: 10vh;\n    margin-bottom: 10vh;\n    margin-left: 20vw;\n    margin-right: 20vw;\n`;\nconst SignUp = () => {\n\treturn(\n\t\t<AuthStyle>\n\t\t\t<h3>Signup</h3>\n\t\t\t<Form onSubmit={e => e.preventDefault()}>\n\t\t\t\t<Input type=\"text\" placeholder=\"Username\" />\n\t\t\t\t<Input type=\"email\" placeholder=\"Email\" />\n\t\t\t\t<Input type=\"password\" placeholder=\"Password\" />\n\t\t\t\t<Button type=\"submit\">Login</Button>\n\t\t\t</Form>\n\t\t</AuthStyle> \n\t);\n};\n\nexport default SignUp;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\n// Passed in from parent component or from mapStateToProps\nconst Auth = ({ component: Component, path, loggedIn, id, exact }) => (\n\t<Route path={path} exact={exact} render={(props) => (\n\t\t!loggedIn ? (\n\t\t\t<Component {...props} />\n\t\t) : (\n\t\t// Redirect to the tweets page if the user is authenticated\n\t\t\t<Redirect to={'/user/' + id } />\n\t\t)\n\t)} />\n);\n\n// Use the isAuthenitcated slice of state to determine whether a user is logged in\n\nconst mapStateToProps = state => (\n\t{ loggedIn: state.session.isAuthenticated,\n\t\tid: state.session.id }\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n \n\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport styled from 'styled-components';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport {theme} from './styled/theme';\nimport Navbar from './components/navbar';\nimport RecentImgs from './components/recent';\nimport UserStory from './components/user';\nimport Login from './components/login';\nimport SignUp from './components/signup';\nimport {AuthRoute} from './util/route';\n\nconst AppStyle = styled.div`\n    a {\n        text-decoration: none;\n        color:${props => props.theme.colors.font};\n    } \n    a:visited {\n        color:${props => props.theme.colors.font};\n    }\n    background-color: ${props => props.theme.colors.background};\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: calc(9pt + 0.5vmin);\n    color: ${props => props.theme.colors.font};\n    \n`;\n\nfunction App() {\n\tconst session = useSelector( \n\t\tstate => state.session,\n\t);\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<AppStyle>\n\t\t\t\t<Navbar />\n\t\t\t\t<Route exact path=\"/\" component={RecentImgs} />\n\t\t\t\t<AuthRoute exact path=\"/login\" component={Login} />\n\t\t\t\t<AuthRoute exact path=\"/signup\" component={SignUp} />\n\t\t\t\t<Route path='/user/:id' component={UserStory} />\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</AppStyle>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\nimport { logout, signup, login } from './actions/session';\nimport 'semantic-ui-css/semantic.min.css';\n\nlet store;\nlet state = {};\n\nif (localStorage.jwtToken) {\n\tconst decodedUser = jwt_decode(localStorage.jwtToken);\n\tconst currentTime = Date.now() / 1000;\n\tstate.session = {\n\t\tisAuthenticated: true, \n\t\t...decodedUser\n\t};\n\tstore = configureStore(state);\n\tif (decodedUser.exp < currentTime) {\n\t\tstore.dispatch(logout());\n\t\twindow.location.href = '/';\n\t}\n} else {\n\tstore = configureStore(state);\n}\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<App  />\n\t\t</Router>\n\t</Provider>,\n\tdocument.getElementById('root')\t\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","\nimport {\n\tRECEIVE_CURRENT_USER,\n\tRECEIVE_USER_LOGOUT,\n\tRECEIVE_USER_SIGN_IN\n} from '../actions/session';\n\nconst initial ={\n\tisAuthenticated:false,\n};\n\nexport default function(state = initial, action) {\n\tswitch (action.type) {\n\tcase RECEIVE_CURRENT_USER:\n\t\treturn {\n\t\t\t...state,\n\t\t\tisAuthenticated: !!action.currentUser,\n\t\t\t...action.currentUser\n\t\t};\n\tcase RECEIVE_USER_LOGOUT:\n\t\treturn {\n\t\t\tisAuthenticated: false,\n\t\t};\n\tcase RECEIVE_USER_SIGN_IN:\n\t\treturn {\n\t\t\t...state,\n\t\t\tisSignedIn: true\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n    \n}","import { combineReducers } from 'redux';\nimport session from './session';\n\nconst RootReducer = combineReducers({\n    session\n})\n\nexport default RootReducer","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers/root';\n\nconst configureStore = (preloadedState = {}) => {\n  let middleware = [thunk];\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = [...middleware, logger];\n  }\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(...middleware),\n  );\n};\n\nexport default configureStore;"],"sourceRoot":""}